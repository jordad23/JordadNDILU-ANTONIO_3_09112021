button {
  background: linear-gradient(7deg, #9356DC, #FF79DA);
  border-radius: 2rem;
  display: block;
  margin: auto;
  margin-bottom: 2rem;
  padding: 1rem;
  height: 50px;
  width: 185px;
  color: white;
  border: none;
  box-shadow: 0 0px 20px #c3c3c3;
  transition: all 1s;
}
button:hover {
  background: linear-gradient(7deg, #9356DC, #fface8);
  box-shadow: 0 0px 20px #aaaaaa;
}
@media screen and (min-width: 1400px) {
  button {
    color: red;
  }
}

.coeur {
  display: flex;
  justify-content: space-between;
}
.coeur::after {
  display: flex;
  height: 2.5rem;
  content: "\f004";
  font-family: "Font Awesome 5 Free";
  color: #303030;
  font-weight: initial;
}
.coeur:hover::after {
  font-weight: bold;
  background: -webkit-linear-gradient(-90deg, white, #FF79DA, #9356DC);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-animation: remplissage 1s both;
  animation: remplissage 1s both;
}

@-webkit-keyframes remplissage {
  from {
    background-position-y: 0.1rem;
  }
  to {
    background-position-y: -1rem;
  }
}

@keyframes remplissage {
  from {
    background-position-y: 0.1rem;
  }
  to {
    background-position-y: -1rem;
  }
}
footer {
  background-color: #303030;
}
footer > * {
  padding: 1rem;
  margin: 0;
}
footer h4 {
  font-family: "Shrikhand", cursif;
  color: white;
  text-align: left;
}
footer ul {
  list-style-type: none;
  color: white;
}
footer i {
  width: 2rem;
}

header {
  background-color: white;
  width: 100%;
  padding: 1rem 0;
  box-shadow: 0 1px 4px black;
  margin-bottom: 2px;
  display: grid;
  grid-template-areas: "retour logo .";
  grid-template-columns: 2rem auto 2rem;
}
header img {
  grid-area: logo;
  width: 50%;
  max-width: 250px;
  justify-self: center;
}
header a {
  grid-area: retour;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}

article.plat {
  height: 68px;
  display: flex;
  margin: auto;
  background-color: white;
  border-radius: 1rem;
  margin-bottom: 1rem;
  box-shadow: 0 0px 20px #c3c3c3;
}
article.plat div {
  width: calc(100% - 1rem);
  margin-left: 1rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-top: 0.75rem;
}
article.plat div > * {
  padding: 0;
  margin: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
article.plat price {
  display: flex;
  width: 3rem;
  height: 80%;
  align-items: flex-end;
}
article.plat aside {
  width: 0;
  overflow-x: hidden;
  transition: width 1s;
  background-color: #99e2d0;
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
  border-radius: 0 1rem 1rem 0;
  color: white;
}
article.plat aside::after {
  content: "\f058";
  font-family: "Font Awesome 5 Free";
  font-weight: bold;
  transition: transform 1s;
  transform: rotate(90deg);
}
article.plat:hover aside {
  width: 3rem;
}
article.plat:hover aside::after {
  transform: rotate(0deg);
}
article.plat:hover div {
  width: calc(100% - 4rem);
}

article.restaurant {
  background: white;
  width: 90%;
  margin: 1rem auto;
  border-radius: 1rem 1rem 1rem 1rem;
  box-shadow: 0 0px 20px #c3c3c3;
}
article.restaurant img {
  width: 100%;
  height: 175px;
  -o-object-fit: cover;
  object-fit: cover;
  border-radius: 1rem 1rem 0 0;
}
article.restaurant.nouveau::after {
  content: "nouveau";
  background-color: #99e2d0;
  position: relative;
  top: -210px;
  left: 70%;
  padding: 0.5rem;
}
article.restaurant h2 {
  padding: 0 0.5rem 0 0;
  margin: 0;
}
article.restaurant address {
  padding: 0.5rem;
  margin: 0;
  margin-left: 1rem;
}

aside.search {
  background-color: #eaeaea !important;
  text-align: center;
  padding: 0.5rem;
}
aside.search input {
  border: none;
  background-color: #eaeaea;
  font-weight: bold;
  width: 30%;
}

body.index ol {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
body.index ol li {
  background-color: #f6f6f6;
  height: 3rem;
  border-radius: 1rem;
  display: flex;
  align-items: center;
  width: 80%;
  margin: 1rem auto;
  cursor: pointer;
  box-shadow: 0 0px 20px #c3c3c3;
  transition: all 1s;
}
body.index ol li:before {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  border-radius: 50%;
  background-color: #9356DC;
  color: white;
  margin-left: -1rem;
  margin-right: 1rem;
}
body.index ol li:nth-child(1):before {
  content: "1";
}
body.index ol li:nth-child(2):before {
  content: "2";
}
body.index ol li:nth-child(3):before {
  content: "3";
}
body.index ol li:hover {
  background-color: #e4d5f6;
}
body.index ol li:hover i {
  color: #9356DC;
}
body.index ol i {
  color: #7e7e7e;
  margin-right: 1rem;
}
body.index h1,
body.index h3,
body.index p {
  text-align: center;
}
body.index section {
  padding-bottom: 1rem;
}
body.index section:first-of-type {
  background-color: #f6f6f6;
}
body.index h2 {
  margin-left: 1rem;
  grid-area: titre;
}
body.index h3 i {
  margin-right: 1rem;
}
@media screen and (min-width: 1024px) {
  body.index main {
    display: grid;
    grid-template-areas: "titre titre" "r1 r2" "r3 r4";
  }
}

body.menu {
  background-color: #f6f6f6;
}
body.menu main {
  background-color: #f6f6f6;
}
body.menu main > * {
  padding: 0 1rem;
}
body.menu img {
  width: 100%;
  max-height: 20rem;
  -o-object-fit: cover;
  object-fit: cover;
}
body.menu h1 {
  border-radius: 2rem 2rem 0 0;
  margin-top: -2rem;
  background-color: #f6f6f6;
  position: relative;
  padding-top: 1rem;
  font-family: Shrikhand;
  font-size: 2rem;
}
body.menu h2 {
  text-transform: uppercase;
  font-size: 1.2rem;
  font-weight: normal;
}
body.menu h2::after {
  display: block;
  background-color: #99e2d0;
  width: 3rem;
  content: "";
  height: 2px;
}
body.menu h2 i {
  margin-right: 1rem;
}

body {
  margin: 0;
  max-width: 100vw;
  margin: auto;
  font-family: Roboto, sans-serif;
}
@media screen and (min-width: 768px) {
  body {
    max-width: 700px;
  }
}

a {
  text-decoration: none;
  color: black;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
